buildscript {
    ext {
        kotlinVersion = '1.3.21'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'

group 'com.github.grishberg'
version '0.2.3'

ext {
    PUBLISH_GROUP_ID = group
    PUBLISH_ARTIFACT_ID = 'android-performance'
    PUBLISH_VERSION = version
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url 'https://maven.google.com'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation group: 'commons-cli', name: 'commons-cli', version: '1.4'

    implementation "org.slf4j:slf4j-api:1.7.25"
    implementation "org.slf4j:slf4j-log4j12:1.7.25"
    implementation group: 'log4j', name: 'log4j', version: '1.2.17'
    implementation 'com.android.tools.ddms:ddmlib:26.6.3'
    implementation "io.github.grigory-rylov:android-instrumental-test-runner-core:1.6.17"
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.apache.commons:commons-math3:3.6.1'

    testImplementation "junit:junit:4.12"
    testImplementation 'org.mockito:mockito-core:2.23.0'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

// need to call  ./gradlew clean build generateRelease
apply from: 'publish.gradle'

apply plugin: 'maven-publish'
// ./gradlew publishToMavenLocal
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
// ./gradlew fatJar
task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'AppKt',
                'Implementation-Version': version
    }
    baseName = 'android-performance-test'
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}
